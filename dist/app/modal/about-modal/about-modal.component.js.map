{"version":3,"sources":["../../../../build/src/app/modal/about-modal/about-modal.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAET,YAAY,EACZ,KAAK,EAEL,MAAM,EACN,iBAAiB,EAClB,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,SAAA,EAAW,QAAA,EAAU,OAAA,EAAQ,MAAO,QAAA,CAAS;AAKtD;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AAEH;IAcE;;OAEG;IACH;QAXA;;WAEG;QACF,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAEvB,kBAAa,GAAG,EAAsB,CAAC;IAMhC,CAAC;IAEhB,iBAAiB;IAEjB;;OAEG;IACH,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,uCAAS,GAAT;QACE,8BAA8B;QAC9B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED;;OAEG;IACO,yCAAW,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9C,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACH,mCAAK,GAAL;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,KAAK,EAAE,IAAI;SACO,CAAC,CAAC;IACxB,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,63BAAi1B;iBAC51B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,kCAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,EAAG,EAAE,EAAE;KACpD,CAAC;IACF,0BAAC;CAzED,AAyEC,IAAA;SAzEY,mBAAmB","file":"about-modal.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  DoCheck,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\nimport { AboutModalConfig } from './about-modal-config';\nimport { AboutModalEvent } from './about-modal-event';\n\n/**\n * About Modal component\n *\n * Usage:\n * <code><pre>\n * // Individual module import\n * import { AboutModalModule } from 'patternfly-ng/modal';\n * // Or\n * import { AboutModalModule } from 'patternfly-ng';\n *\n * // NGX Bootstrap\n * import { ModalModule } from 'ngx-bootstrap/modal';\n *\n * &#64;NgModule({\n *   imports: [AboutModalModule, ModalModule.forRoot(),...]\n * })\n * export class AppModule(){}\n * </pre></code>\n *\n * Optional:\n * <code><pre>\n * import { AboutModalConfig, AboutModalEvent } from 'patternfly-ng/modal';\n * </pre></code>\n */\n\nexport class AboutModalComponent implements DoCheck, OnInit {\n  /**\n   * The AboutModal config contaning component properties\n   */\n   config: AboutModalConfig;\n\n  /**\n   * The Event is emitted when modal is closed\n   */\n   onCancel = new EventEmitter();\n\n  private defaultConfig = {} as AboutModalConfig;\n  private prevConfig: AboutModalConfig;\n\n  /**\n   * The default contructor\n   */\n  constructor() {}\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   * Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Setup default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  /**\n   * Close the Modal\n   * @param  $event MouseEvent to emit\n   */\n  close(): void {\n    this.onCancel.emit({\n      close: true\n    } as AboutModalEvent);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-about-modal',\n  template: `<div class=\"about-modal-pf\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" (click)=\"close()\" aria-hidden=\"true\"><span class=\"pficon pficon-close\"></span></button></div><div class=\"modal-body\"><h1 *ngIf=\"config.title\">{{config.title}}</h1><div *ngIf=\"config.productInfo && config.productInfo.length > 0\" class=\"product-versions-pf\"><ul class=\"list-unstyled\"><li *ngFor=\"let info of config.productInfo\"><strong>{{info.name}}</strong> {{info.value}}</li></ul></div><div class=\"product-versions-pf\"><ng-content></ng-content></div><div *ngIf=\"config.additionalInfo\" class=\"product-versions-pf\">{{config.additionalInfo}}</div><div *ngIf=\"config.copyright\" class=\"trademark-pf\">{{config.copyright}}</div></div><div class=\"modal-footer\"><img *ngIf=\"config.logoImageSrc\" [src]=\"config.logoImageSrc\" alt=\"{{config.logoImageAlt}}\"></div></div>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'onCancel': [{ type: Output, args: ['onCancel', ] },],\n};\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}