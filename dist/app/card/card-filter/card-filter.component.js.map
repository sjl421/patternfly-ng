{"version":3,"sources":["../../../../build/src/app/card/card-filter/card-filter.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EACN,iBAAiB,EAClB,MAAM,eAAA,CAAgB;AAIvB;;;;;;;;;;;;;;;;;;;;GAoBG;AAEH;IAaE;;OAEG;IACH;QAVA;;WAEG;QACF,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;IAQ/B,CAAC;IAED,iBAAiB;IAEjB;;OAEG;IACH,sCAAQ,GAAR;QAAA,iBAUC;QATC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM;gBAC1B,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;oBAC5B,MAAM,CAAC;gBACT,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,UAAU;IAEF,oCAAM,GAAd,UAAe,MAAkB;QAC/B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IASD,sBAAI,8CAAa;QAPjB,YAAY;QAEZ;;;;WAIG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;QAED;;;;WAIG;aACH,UAAkB,MAAkB;YAClC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC/B,CAAC;;;OATA;IAUI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,qiBAAygB;iBACphB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,kCAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,gBAAgB,EAAG,EAAE,EAAE;KAC1D,CAAC;IACF,0BAAC;CA5ED,AA4EC,IAAA;SA5EY,mBAAmB","file":"card-filter.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { CardFilter } from '../card-filter/card-filter';\n\n/**\n * Card filter component\n *\n * Usage:\n * <code><pre>\n * // Individual module import\n * import { CardFilterModule } from 'patternfly-ng/card';\n * // Or\n * import { CardFilterModule } from 'patternfly-ng';\n *\n * &#64;NgModule({\n *   imports: [CardFilterModule,...]\n * })\n * export class AppModule(){}\n * </pre></code>\n *\n * Optional:\n * <code><pre>\n * import { CardFilter, CardFilterPosition } from 'patternfly-ng/card';\n * </pre></code>\n */\n\nexport class CardFilterComponent implements OnInit {\n  /**\n   * The card filters\n   */\n   filters: CardFilter[];\n\n  /**\n   * The event emitted when a filter is selected\n   */\n   onSelect = new EventEmitter();\n\n  private _currentFilter: CardFilter;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Initialization\n\n  /**\n   * Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    if (this.filters !== undefined && this.filters.length > 0) {\n      this.currentFilter = this.filters[0];\n      this.filters.forEach((filter) => {\n        if (filter.default === true) {\n          this.currentFilter = filter;\n          return;\n        }\n      });\n    }\n  }\n\n  // Actions\n\n  private select($event: CardFilter): void {\n    this.currentFilter = $event;\n    this.onSelect.emit($event);\n  }\n\n  // Accessors\n\n  /**\n   * Returns the current filter\n   *\n   * @returns {CardFilter} The current filter\n   */\n  get currentFilter(): CardFilter {\n    return this._currentFilter;\n  }\n\n  /**\n   * Sets the current filter\n   *\n   * @param {CardFilter} filter The current filter\n   */\n  set currentFilter(filter: CardFilter) {\n    this._currentFilter = filter;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-card-filter',\n  template: `<div class=\"card-pf-time-frame-filter\"><div class=\"dropdown primary-action\" dropdown><button class=\"btn btn-default dropdown-toggle\" type=\"button\" dropdownToggle>{{currentFilter?.title}}<span class=\"caret\"></span></button><ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\" *dropdownMenu><li role=\"menuitem\" *ngFor=\"let filter of filters\" [ngClass]=\"{'selected': filter === currentFilter}\"><a class=\"dropdown-item\" role=\"menuitem\" tabindex=\"-1\" (click)=\"select(filter)\">{{filter?.title}}</a></li></ul></div></div>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'filters': [{ type: Input },],\n'onSelect': [{ type: Output, args: ['onFilterSelect', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}