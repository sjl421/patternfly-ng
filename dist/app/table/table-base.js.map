{"version":3,"sources":["../../../build/src/app/table/table-base.ts"],"names":[],"mappings":"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","file":"table-base.js","sourceRoot":"","sourcesContent":["import {\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef\n} from '@angular/core';\n\nimport { Action } from '../action/action';\nimport { FilterEvent } from '../filter/filter-event';\nimport { PaginationEvent } from '../pagination/pagination-event';\nimport { SortEvent } from '../sort/sort-event';\nimport { ToolbarView } from '../toolbar/toolbar-view';\nimport { TableEvent } from './table-event';\n\n/**\n * Table base\n */\nexport abstract class TableBase {\n  /**\n   * The name of the toolbar template containing actions\n   */\n   actionTemplate: TemplateRef<any>;\n\n  /**\n   * The name of the toolbar template containing views\n   */\n   viewTemplate: TemplateRef<any>;\n\n  /**\n   * The event emitted when a row has been dragged and dropped\n   */\n   onDrop = new EventEmitter();\n\n  /**\n   * The Event is emitted when Page Size is changed -- requires paginationConfig\n   *\n   * Not applicable with ngx-datatable page event\n   */\n   onPageSizeChange = new EventEmitter();\n\n  /**\n   * The Event is emitted when Page Number is Changed -- requires paginationConfig\n   *\n   * Not applicable with ngx-datatable page event\n   */\n   onPageNumberChange = new EventEmitter();\n\n  /**\n   * The event emitted when an action (e.g., button, kebab, etc.) has been selected -- requires toolbarConfig\n   */\n   onActionSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a field menu option is selected -- requires toolbarConfig\n   */\n   onFilterFieldSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a filter has been changed -- requires toolbarConfig\n   */\n   onFilterChange = new EventEmitter();\n\n  /**\n   * The event emitted when a filter has been saved -- requires toolbarConfig\n   */\n   onFilterSave = new EventEmitter();\n\n  /**\n   * The event emitted when the user types ahead in the query input field -- requires toolbarConfig\n   */\n   onFilterTypeAhead = new EventEmitter();\n\n  /**\n   * The event emitted when an item selection has been changed -- requires showCheckbox\n   *\n   * Not applicable with ngx-datatable select event\n   */\n   onSelectionChange = new EventEmitter();\n\n  /**\n   * The event emitted when the sort has changed -- requires toolbarConfig\n   *\n   * Not applicable with ngx-datatable sort event\n   */\n   onSortChange = new EventEmitter();\n\n  /**\n   * The event emitted when a view has been selected -- requires toolbarConfig\n   */\n   onViewSelect = new EventEmitter();\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Private\n\n  protected handleAction($event: Action) {\n    this.onActionSelect.emit($event);\n  }\n\n  protected handleFilterChange($event: FilterEvent) {\n    this.onFilterChange.emit($event);\n  }\n\n  protected handleFilterFieldSelect($event: FilterEvent) {\n    this.onFilterFieldSelect.emit($event);\n  }\n\n  protected handleFilterTypeAhead($event: FilterEvent) {\n    this.onFilterTypeAhead.emit($event);\n  }\n\n  protected handleFilterSave($event: FilterEvent) {\n    this.onFilterSave.emit($event);\n  }\n\n  protected handlePageSize($event: PaginationEvent) {\n    this.onPageSizeChange.emit($event);\n  }\n\n  protected handlePageNumber($event: PaginationEvent) {\n    this.onPageNumberChange.emit($event);\n  }\n\n  protected handleSelectionChange($event: TableEvent) {\n    this.onSelectionChange.emit($event);\n  }\n\n  protected handleSortChange($event: SortEvent) {\n    this.onSortChange.emit($event);\n  }\n\n  protected handleViewSelect($event: ToolbarView) {\n    this.onViewSelect.emit($event);\n  }\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'actionTemplate': [{ type: Input },],\n'viewTemplate': [{ type: Input },],\n'onDrop': [{ type: Output, args: ['onDrop', ] },],\n'onPageSizeChange': [{ type: Output, args: ['onPageSizeChange', ] },],\n'onPageNumberChange': [{ type: Output, args: ['onPageNumberChange', ] },],\n'onActionSelect': [{ type: Output, args: ['onActionSelect', ] },],\n'onFilterFieldSelect': [{ type: Output, args: ['onFilterFieldSelect', ] },],\n'onFilterChange': [{ type: Output, args: ['onFilterChange', ] },],\n'onFilterSave': [{ type: Output, args: ['onFilterSave', ] },],\n'onFilterTypeAhead': [{ type: Output, args: ['onFilterTypeAhead', ] },],\n'onSelectionChange': [{ type: Output, args: ['onSelectionChange', ] },],\n'onSortChange': [{ type: Output, args: ['onSortChange', ] },],\n'onViewSelect': [{ type: Output, args: ['onViewSelect', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}