{"version":3,"sources":["../../../build/src/app/utilities/window.reference.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C;IACE,iDAAiD;IACjD,MAAM,CAAC,MAAA,CAAO;AAChB,CAAC;AAED;;;;;;;;;GASG;AAEH;IAAA;IAUA,CAAC;IATC,sBAAI,yCAAY;aAAhB;YACE,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;;;OAAA;IACI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,sBAAC;CAVD,AAUC,IAAA;SAVY,eAAe","file":"window.reference.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  // return the global native browser window object\n  return window;\n}\n\n/**\n * Native window reference\n *\n * Usage:\n * <code><pre>\n * // Individual module import\n * import { WindowReference } from 'patternfly-ng/utilities';\n * // Or\n * import { WindowReference } from 'patternfly-ng';\n */\n\nexport class WindowReference {\n  get nativeWindow(): any {\n    return _window();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}