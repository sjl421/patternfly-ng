{"version":3,"sources":["../../../../build/src/app/pipe/truncate/truncate.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AAEpD;;;;;;;;;;;;;;;;;GAiBG;AAEH;IAAA;IAkBA,CAAC;IAjBC;;;;;;;OAOG;IACH,gCAAS,GAAT,UAAU,KAAa,EAAE,KAAkB,EAAE,KAAqB;QAAzC,sBAAA,EAAA,UAAkB;QAAE,sBAAA,EAAA,aAAqB;QAChE,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IAC5E,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAC,EAAG,EAAE;KAC5C,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,mBAAC;CAlBD,AAkBC,IAAA;SAlBY,YAAY","file":"truncate.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Truncate pipe\n *\n * This is currently used with the save filter feature of the filter fields component\n *\n * Usage:\n * <code><pre>\n * // Individual module import\n * import { TruncatePipeModule } from 'patternfly-ng/pipe';\n * // Or\n * import { TruncatePipeModule } from 'patternfly-ng';\n *\n * &#64;NgModule({\n *   imports: [TruncatePipeModule,...]\n * })\n * export class AppModule(){}\n * </pre></code>\n */\n\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * Truncate given string\n   *\n   * @param {string} value The string to truncate\n   * @param {string} limit The number of characters to truncate the string at\n   * @param {string} trail The trailing characters representing truncation\n   * @returns {string} The truncated string\n   */\n  transform(value: string, limit: number = 10, trail: string = '...'): string {\n    return (value.length > limit) ? value.substring(0, limit) + trail : value;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'truncate'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}